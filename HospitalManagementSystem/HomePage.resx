<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wepzI/jKZ6tfQAAAABJRU5ErkJggg==
</value>
  </data>
</root>